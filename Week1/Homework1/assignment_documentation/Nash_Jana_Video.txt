1) Run through HTML Code
a. Running through the html you can see it is just the standard html for a form, we do go on and run the viewport meta so it is basically responsive without any specific details added in and linked to our css style sheet.b. The body you can see there is the multipart/form-data using the action newuser.php and the POST method.  Each form element is in a basic class of formGroup keeping each one grouped together but separate from the others.  All fields on this particular form are required and I utilized names that I have used previously in databases so that they are familiar.c. I did add a MAX_FILE_SIZE value and in the future I want to trigger an actual error message off of it when a file is too big.  Right now it just doesn't upload, but it doesn't trigger any message either, but for expediency and since it is not a part of this particular assignment priority has me working on it if time allows or in the future.  d. I did at first have both an upload file and submit button but they were in essence doing the same thing.  One thing I would like to figure out as time goes on is how to upload a file but not have it actually add the new user until the submit button only is clicked.  Right now, if I upload the image file via the upload image (if it were there) the new user would be added as well.  As you can see there is also a generic basic reset button which will reset all the fields.
2) Run the php code
a. In our php code there are two different functions.  i. makeArray function sets up the variables from the form fields as well as the $shpass which will take the $pass (password) and salt/hash it.  This only sets up the variables, no variables nor the array will be made until we actually call makeArray() later in the script.ii. imgDir() is the function that uploads the avatar image.  The $uploaddir sets the folder that the image will be copied into.  $uploadfile is the file that the user chooses to upload and $uploadOk is turned on by default to true with the value of "1".  $imageFileType will be used in order to specify what file formats we will except in the IF STATEMENT that follows.iii. IF STATEMENT - we are saying in our IF statement that if the image is NOT "!=" a jpg, png or jpeg then it should not $upload = 0 upload.  As well it will echo out an error message... iv. Else it will move the uploadedfile and it will echo / display the image with a success message. $uploadOk = 1, using the default upload value.  These will not actually do anything until they are called after the submit button is clicked.v. So next as you see we have another IF STATEMENT and this one refers to the submit button and it's being clicked.  When the button is clicked the following echos will be executed and it will post a link to register again. (Congratulations, etc)vi. It also sets up a variable for $data which calls the makeArray() function and echos out a table layout that will display all the attributes with some basic styling.  After the ending of the table layout we call the imgDir() function which will display the avatar image the user uploaded.vii. To be commented out before submittal we do run a print_r defining all the variables which was very helpful in getting the script to run.  For example the confusion I'd had about #3 statement below.3) Talk about how I was confused by the connection of seeming unconnected image code removal made the whole image disappear, when I realized the second wasn't showing the image but actually running the function of imgDir().Youtube URL  https://youtu.be/rCq-dZCS6nU